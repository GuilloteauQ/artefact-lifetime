@inproceedings{dutot:hal-01333471,
  TITLE = {{Batsim: a Realistic Language-Independent Resources and Jobs Management Systems Simulator}},
  AUTHOR = {Dutot, Pierre-Fran{\c c}ois and Mercier, Michael and Poquet, Millian and Richard, Olivier},
  URL = {https://hal.archives-ouvertes.fr/hal-01333471},
  BOOKTITLE = {{20th Workshop on Job Scheduling Strategies for Parallel Processing}},
  ADDRESS = {Chicago, United States},
  YEAR = {2016},
  MONTH = May,
  KEYWORDS = {Reproducibility ; RJMS ; Scheduling ; Simulation},
  PDF = {https://hal.archives-ouvertes.fr/hal-01333471/file/batsim.pdf},
  HAL_ID = {hal-01333471},
  HAL_VERSION = {v1},
}

@article{casanova:hal-01017319,
    hal_id = {hal-01017319},
    url = {http://hal.inria.fr/hal-01017319},
    title = {Versatile, Scalable, and Accurate Simulation of Distributed Applications and Platforms},
    author = {Casanova, Henri and Giersch, Arnaud and Legrand, Arnaud and Quinson, Martin and Suter, Fr{\'e}d{\'e}ric},
    publisher = {Elsevier},
    pages = {2899-2917},
    journal = {Journal of Parallel and Distributed Computing},
    volume = {74},
    number = {10},
    year = {2014},
    month = Jun,
    pdf = {http://hal.inria.fr/hal-01017319/PDF/simgrid3-journal.pdf},
}

@phdthesis{mercier_contribution_2019,
	type = {{PhD} {Thesis}},
	title = {Contribution to {High} {Performance} {Computing} and {Big} {Data} {Infrastructure} {Convergence}},
	language = {en},
	school = {Universite Grenoble Alpes},
	author = {Mercier, Michael},
	year = {2019}
}

@article{collberg_repeatability_2015,
	title = {Repeatability and {Benefaction} in {Computer} {Systems} {Research} - {A} {Study} and a {Modest} {Proposal}},
	abstract = {We describe a study into the extent to which Computer Systems researchers share their code and data and the extent to which such code builds. Starting with 601 papers from ACM conferences and journals, we examine 402 papers whose results were backed by code. For 32.3\% of these papers we were able to obtain the code and build it within 30 minutes; for 48.3\% of the papers we managed to build the code, but it may have required extra eﬀort; for 54.0\% of the papers either we managed to build the code or the authors stated the code would build with reasonable eﬀort. We also propose a novel sharing speciﬁcation scheme that requires researchers to specify the level of sharing that reviewers and readers can assume from a paper.},
	language = {en},
	author = {Collberg, Christian and Proebsting, Todd and Warren, Alex M},
	year = {2015},
	pages = {68}
}

@article{feitelson_repeatability_2015,
	title = {From {Repeatability} to {Reproducibility} and {Corroboration}},
	volume = {49},
	issn = {0163-5980},
	url = {https://dl.acm.org/doi/10.1145/2723872.2723875},
	doi = {10.1145/2723872.2723875},
	abstract = {Being able to repeat experiments is considered a hallmark of the scientiﬁc method, used to conﬁrm or refute hypotheses and previously obtained results. But this can take many forms, from precise repetition using the original experimental artifacts, to conceptual reproduction of the main experimental idea using new artifacts. Furthermore, the conclusions from previous work can also be corroborated using a different experimental methodology altogether. In order to promote a better understanding and use of such methodologies we propose precise deﬁnitions for different terms, and suggest when and why each should be used.},
	language = {en},
	number = {1},
	urldate = {2020-05-21},
	journal = {ACM SIGOPS Operating Systems Review},
	author = {Feitelson, Dror G.},
	month = jan,
	year = {2015},
	pages = {3--11}
}

@article{dolstra_nix_2004,
	title = {Nix: {A} {Safe} and {Policy}-{Free} {System} for {Software} {Deployment}},
	abstract = {Existing systems for software deployment are neither safe nor sufficiently flexible. Primary safety issues are the inability to enforce reliable specification of component dependencies, and the lack of support for multiple versions or variants of a component. This renders deployment operations such as upgrading or deleting components dangerous and unpredictable. A deployment system must also be flexible (i.e., policy-free) enough to support both centralised and local package management, and to allow a variety of mechanisms for transferring components. In this paper we present Nix, a deployment system that addresses these issues through a simple technique of using cryptographic hashes to compute unique paths for component instances.},
	language = {en},
	author = {Dolstra, Eelco and de Jonge, Merijn and Visser, Eelco},
	year = {2004},
	pages = {14}
}

@inproceedings{capit_batch_2005,
	address = {Cardiff, Wales, UK},
	title = {A batch scheduler with high level components},
	isbn = {978-0-7803-9074-4},
	url = {http://ieeexplore.ieee.org/document/1558641/},
	doi = {10.1109/CCGRID.2005.1558641},
	abstract = {In this article we present the design choices and the evaluation of a batch scheduler for large clusters, named OAR. This batch scheduler is based upon an original design that emphasizes on low software complexity by using high level tools. The global architecture is built upon the scripting language Perl and the relational database engine Mysql. The goal of the project OAR is to prove that it is possible today to build a complex system for ressource management using such tools without sacriﬁcing efﬁciency and scalability. Currently, our system offers most of the important features implemented by other batch schedulers such as priority scheduling (by queues), reservations, backﬁlling and some global computing support. Despite the use of high level tools, our experiments show that our system has performances close to other systems. Furthermore, OAR is currently exploited for the management of 700 nodes (a metropolitan GRID) and has shown good efﬁciency and robustness.},
	language = {en},
	urldate = {2020-05-25},
	booktitle = {{CCGrid} 2005. {IEEE} {International} {Symposium} on {Cluster} {Computing} and the {Grid}, 2005.},
	publisher = {IEEE},
	author = {Capit, N. and Da Costa, G. and Georgiou, Y. and Huard, G. and Martin, C. and Mounie, G. and Neyron, P. and Richard, O.},
	year = {2005},
	pages = {776--783 Vol. 2}
}

@article{buchert_survey_2015,
	title = {A survey of general-purpose experiment management tools for distributed systems},
	volume = {45},
	issn = {0167739X},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167739X14002003},
	doi = {10.1016/j.future.2014.10.007},
	abstract = {In the ﬁeld of large-scale distributed systems, experimentation is particularly diﬃcult. The studied systems are complex, often nondeterministic and unreliable, software is plagued with bugs, whereas the experiment workﬂows are unclear and hard to reproduce. These obstacles led many independent researchers to design tools to control their experiments, boost productivity and improve quality of scientiﬁc results.},
	language = {en},
	urldate = {2020-06-11},
	journal = {Future Generation Computer Systems},
	author = {Buchert, Tomasz and Ruiz, Cristian and Nussbaum, Lucas and Richard, Olivier},
	month = apr,
	year = {2015},
	pages = {1--12}
}

@article{ruiz_reconstructable_2015,
	title = {Reconstructable {Software} {Appliances} with {Kameleon}},
	volume = {49},
	issn = {0163-5980},
	url = {https://dl.acm.org/doi/10.1145/2723872.2723883},
	doi = {10.1145/2723872.2723883},
	abstract = {A software appliance builder bundles together an application with its needed middleware and an operating system to allow easy deployment on Infrastructure as a Service (IaaS) providers. These builders have the potential to address a key need in our community: the ability to reproduce an experiment. This paper reports the experiences on developing a software appliance builder called Kameleon that leverages popular and well tested tools. Kameleon simpliﬁes the creation of complex software appliances that are targeted at research on operating systems, HPC and distributed computing. It does so by proposing a highly modular description format that encourages collaboration and reuse of procedures. Moreover, it provides debugging mechanisms for improving experimenter’s productivity. To justify that our appliance builder stands above others, we compare it with the most known tools used by developers and researchers to automate the construction of software environments for virtual machines and IaaS infrastructures.},
	language = {en},
	number = {1},
	urldate = {2020-06-12},
	journal = {ACM SIGOPS Operating Systems Review},
	author = {Ruiz, Cristian and Harrache, Salem and Mercier, Michael and Richard, Olivier},
	month = jan,
	year = {2015},
	pages = {80--89}
}

@article{mytkowicz_producing_nodate,
	title = {Producing {Wrong} {Data} {Without} {Doing} {Anything} {Obviously} {Wrong}!},
	abstract = {This paper presents a surprising result: changing a seemingly innocuous aspect of an experimental setup can cause a systems researcher to draw wrong conclusions from an experiment. What appears to be an innocuous aspect in the experimental setup may in fact introduce a signiﬁcant bias in an evaluation. This phenomenon is called measurement bias in the natural and social sciences.},
	language = {en},
	author = {Mytkowicz, Todd and Diwan, Amer and Hauswirth, Matthias and Sweeney, Peter F},
	pages = {12}
}

@article{courtes_functional_2013,
	title = {Functional {Package} {Management} with {Guix}},
	url = {http://arxiv.org/abs/1305.4584},
	abstract = {We describe the design and implementation of GNU Guix, a purely functional package manager designed to support a complete GNU/Linux distribution. Guix supports transactional upgrades and roll-backs, unprivileged package management, per-user proﬁles, and garbage collection. It builds upon the low-level build and deployment layer of the Nix package manager. Guix uses Scheme as its programming interface. In particular, we devise an embedded domain-speciﬁc language (EDSL) to describe and compose packages. We demonstrate how it allows us to beneﬁt from the host general-purpose programming language while not compromising on expressiveness. Second, we show the use of Scheme to write build programs, leading to a “two-tier” programming system.},
	language = {en},
	urldate = {2020-06-13},
	journal = {arXiv:1305.4584 [cs]},
	author = {Courtès, Ludovic},
	month = may,
	year = {2013},
	keywords = {Computer Science - Programming Languages},
	annote = {arXiv: 1305.4584},
	annote = {Comment: European Lisp Symposium (2013)}
}

@incollection{courtes_reproducible_2015,
	address = {Cham},
	title = {Reproducible and {User}-{Controlled} {Software} {Environments} in {HPC} with {Guix}},
	volume = {9523},
	isbn = {978-3-319-27307-5 978-3-319-27308-2},
	url = {http://link.springer.com/10.1007/978-3-319-27308-2_47},
	abstract = {Support teams of high-performance computing (HPC) systems often find themselves between a rock and a hard place: on one hand, they understandably administrate these large systems in a conservative way, but on the other hand, they try to satisfy their users by deploying up-to-date tool chains as well as libraries and scientific software. HPC system users often have no guarantee that they will be able to reproduce results at a later point in time, even on the same system—software may have been upgraded, removed, or recompiled under their feet, and they have little hope of being able to reproduce the same software environment elsewhere. We present GNU Guix and the functional package management paradigm and show how it can improve reproducibility and sharing among researchers with representative use cases.},
	language = {en},
	urldate = {2020-06-13},
	booktitle = {Euro-{Par} 2015: {Parallel} {Processing} {Workshops}},
	publisher = {Springer International Publishing},
	author = {Courtes, Ludovic and Wurmus, Ricardo},
	editor = {Hunold, Sascha and Costan, Alexandru and Giménez, Domingo and Iosup, Alexandru and Ricci, Laura and Gomez Requena, Maria Engracia and Scarano, Vittorio and Varbanescu, Ana Lucia and Scott, Stephen L. and Lankes, Stefan and Weidendorfer, Josef and Alexander, Michael},
	year = {2015},
	doi = {10.1007/978-3-319-27308-2_47},
	pages = {579--591}
}

@article{van_der_burg_disnix_2014,
	title = {Disnix: {A} toolset for distributed deployment},
	volume = {79},
	issn = {01676423},
	shorttitle = {Disnix},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167642312000639},
	doi = {10.1016/j.scico.2012.03.006},
	abstract = {The process of deploying a distributed system in a network of machines is often very complex, laborious and time-consuming, while it is hard to guarantee that the system will work as expected and that specific non-functional deployment requirements from the domain are supported. In this paper we describe the Disnix toolset, which provides system administrators or developers with automatic deployment of a distributed system in a network of machines from declarative specifications and offers properties such as complete dependencies, atomic upgrades and rollbacks to make this process efficient and reliable. Disnix has an extensible architecture, allowing the integration of custom modules to make the deployment more convenient and suitable for the domain in which the system is to be used. Disnix has been under development for almost four years and has been applied to several types of distributed systems, including an industrial case study.},
	language = {en},
	urldate = {2021-11-22},
	journal = {Science of Computer Programming},
	author = {van der Burg, Sander and Dolstra, Eelco},
	month = jan,
	year = {2014},
	pages = {52--69},
	file = {van der Burg and Dolstra - 2014 - Disnix A toolset for distributed deployment.pdf:/home/quentin/Zotero/storage/PFVS2VRK/van der Burg and Dolstra - 2014 - Disnix A toolset for distributed deployment.pdf:application/pdf},
}

@article{cherrueau_enoslib_2022,
	title = {{EnosLib}: {A} {Library} for {Experiment}-{Driven} {Research} in {Distributed} {Computing}},
	volume = {33},
	issn = {1045-9219, 1558-2183, 2161-9883},
	shorttitle = {{EnosLib}},
	url = {https://ieeexplore.ieee.org/document/9534688/},
	doi = {10.1109/TPDS.2021.3111159},
	abstract = {Despite the importance of experiment-driven research in the distributed computing community, there has been little progress in helping researchers conduct their experiments. In most cases, they have to achieve tedious and time-consuming development and instrumentation activities to deal with the speciﬁcs of testbeds and the system under study. In order to relieve researchers of the burden of those efforts, we have developed ENOSLIB: a Python library that takes into account best experimentation practices and leverages modern toolkits on automatic deployment and conﬁguration systems. ENOSLIB helps researchers not only in the process of developing their experimental artifacts, but also in running them over different infrastructures. To demonstrate the relevance of our library, we discuss three experimental engines built on top of ENOSLIB, and used to conduct empirical studies on complex software stacks between 2016 and 2019 (database systems, communication buses and OpenStack). By introducing ENOSLIB, our goal is to gather academic and industrial actors of our community around a library that aggregates everyday experiment-driven research operations. A library that has been already adopted by open-source projects and members of the scientiﬁc community thanks to its ease of use and extension.},
	language = {en},
	number = {6},
	urldate = {2021-11-22},
	journal = {IEEE Transactions on Parallel and Distributed Systems},
	author = {Cherrueau, Ronan-Alexandre and Delavergne, Marie and van Kempen, Alexandre and Lebre, Adrien and Pertin, Dimitri and Balderrama, Javier Rojas and Simonet, Anthony and Simonin, Matthieu},
	month = jun,
	year = {2022},
	pages = {1464--1477},
	file = {Cherrueau et al. - 2022 - EnosLib A Library for Experiment-Driven Research .pdf:/home/quentin/Zotero/storage/23JL26WS/Cherrueau et al. - 2022 - EnosLib A Library for Experiment-Driven Research .pdf:application/pdf},
}

@inproceedings{cherrueau_enosstack_2018,
	address = {Honolulu, HI, USA},
	title = {{EnosStack}: {A} {LAMP}-like stack for the experimenter},
	isbn = {978-1-5386-5979-3},
	shorttitle = {{EnosStack}},
	url = {https://ieeexplore.ieee.org/document/8407024/},
	doi = {10.1109/INFCOMW.2018.8407024},
	abstract = {Reproducibility and repeatability dramatically increase the value of scientiﬁc experiments, but remain two challenging goals for the experimenters. Similar to the LAMP stack that considerably eased the web developers life, in this paper, we advocate the need of an analogous software stack to help the experimenters making reproducible research. We propose the EnosStack, an open source software stack especially designed for reproducible scientiﬁc experiments. EnosStack enables to easily describe experimental workﬂows meant to be re-used, while abstracting the underlying infrastructure running them. Being able to switch experiments from a local to a real testbed deployment greatly lower code development and validation time. We describe the abstractions that have driven its design, before presenting a real experiment we deployed on Grid’5000 to illustrate its usefulness. We also provide all the experiment code, data and results to the community.},
	language = {en},
	urldate = {2021-11-22},
	booktitle = {{IEEE} {INFOCOM} 2018 - {IEEE} {Conference} on {Computer} {Communications} {Workshops} ({INFOCOM} {WKSHPS})},
	publisher = {IEEE},
	author = {Cherrueau, Ronan-Alexandre and Simonin, Matthieu and van Kempen, Alexandre},
	month = apr,
	year = {2018},
	pages = {336--341},
	file = {Cherrueau et al. - 2018 - EnosStack A LAMP-like stack for the experimenter.pdf:/home/quentin/Zotero/storage/RM9TF5VK/Cherrueau et al. - 2018 - EnosStack A LAMP-like stack for the experimenter.pdf:application/pdf},
}

@inproceedings{gamblin_spack_2015,
	address = {Austin Texas},
	title = {The {Spack} package manager: bringing order to {HPC} software chaos},
	isbn = {978-1-4503-3723-6},
	shorttitle = {The {Spack} package manager},
	url = {https://dl.acm.org/doi/10.1145/2807591.2807623},
	doi = {10.1145/2807591.2807623},
	abstract = {Large HPC centers spend considerable time supporting software for thousands of users, but the complexity of HPC software is quickly outpacing the capabilities of existing software management tools. Scientiﬁc applications require speciﬁc versions of compilers, MPI, and other dependency libraries, so using a single, standard software stack is infeasible. However, managing many conﬁgurations is difﬁcult because the conﬁguration space is combinatorial in size.},
	language = {en},
	urldate = {2021-11-22},
	booktitle = {Proceedings of the {International} {Conference} for {High} {Performance} {Computing}, {Networking}, {Storage} and {Analysis}},
	publisher = {ACM},
	author = {Gamblin, Todd and LeGendre, Matthew and Collette, Michael R. and Lee, Gregory L. and Moody, Adam and de Supinski, Bronis R. and Futral, Scott},
	month = nov,
	year = {2015},
	pages = {1--12},
	file = {Gamblin et al. - 2015 - The Spack package manager bringing order to HPC s.pdf:/home/quentin/Zotero/storage/UEHYBBR5/Gamblin et al. - 2015 - The Spack package manager bringing order to HPC s.pdf:application/pdf},
}

@incollection{goos_slurm_2003,
	address = {Berlin, Heidelberg},
	title = {{SLURM}: {Simple} {Linux} {Utility} for {Resource} {Management}},
	volume = {2862},
	isbn = {978-3-540-20405-3 978-3-540-39727-4},
	shorttitle = {{SLURM}},
	url = {http://link.springer.com/10.1007/10968987_3},
	abstract = {Simple Linux Utility for Resource Management (SLURM) is an open source, faulttolerant, and highly scalable cluster management and job scheduling system for Linux clusters of thousands of nodes. Components include machine status, partition management, job management, scheduling, and stream copy modules. This paper presents an overview of the SLURM architecture and functionality.},
	language = {en},
	urldate = {2021-11-22},
	booktitle = {Job {Scheduling} {Strategies} for {Parallel} {Processing}},
	publisher = {Springer Berlin Heidelberg},
	author = {Yoo, Andy B. and Jette, Morris A. and Grondona, Mark},
	editor = {Goos, Gerhard and Hartmanis, Juris and van Leeuwen, Jan and Feitelson, Dror and Rudolph, Larry and Schwiegelshohn, Uwe},
	year = {2003},
	doi = {10.1007/10968987_3},
	pages = {44--60},
	file = {Yoo et al. - 2003 - SLURM Simple Linux Utility for Resource Managemen.pdf:/home/quentin/Zotero/storage/X9DB5SZS/Yoo et al. - 2003 - SLURM Simple Linux Utility for Resource Managemen.pdf:application/pdf},
}

@inproceedings{terraz_melissa,
  TITLE = {{Melissa: Large Scale In Transit Sensitivity Analysis Avoiding Intermediate Files}},
  AUTHOR = {Terraz, Th{\'e}ophile and Ribes, Alejandro and Fournier, Yvan and Iooss, Bertrand and Raffin, Bruno},
  URL = {https://hal.inria.fr/hal-01607479},
  BOOKTITLE = {{The International Conference for High Performance Computing, Networking, Storage and Analysis (Supercomputing)}},
  ADDRESS = {Denver, United States},
  PAGES = {1 - 14},
  YEAR = {2017},
  MONTH = Nov,
  KEYWORDS = {Sensitivity Analysis ; Multi-run Simulations ; Ensemble Simulation ; Sobol' Index ; In Transit Processing},
  PDF = {https://hal.inria.fr/hal-01607479/file/main-Sobol-SC-2017-HALVERSION.pdf},
  HAL_ID = {hal-01607479},
  HAL_VERSION = {v1},
}

@inproceedings{imbert_execo,
  TITLE = {{Using the EXECO toolbox to perform automatic and reproducible cloud experiments}},
  AUTHOR = {Imbert, Matthieu and Pouilloux, Laurent and Rouzaud-Cornabas, Jonathan and Lebre, Adrien and Hirofuchi, Takahiro},
  URL = {https://hal.inria.fr/hal-00861886},
  BOOKTITLE = {{1st International Workshop on UsiNg and building ClOud Testbeds (UNICO, collocated with IEEE CloudCom 2013}},
  ADDRESS = {Bristol, United Kingdom},
  PUBLISHER = {{IEEE}},
  YEAR = {2013},
  MONTH = Dec,
  DOI = {10.1109/CloudCom.2013.119},
  KEYWORDS = {Virtual machining ; grid computing ; Hardware ; Benchmark testing ; Virtualization ; cloud computing ; Process control ; Bandwidth ; Engines},
  PDF = {https://hal.inria.fr/hal-00861886/file/paper-unico13.pdf},
  HAL_ID = {hal-00861886},
  HAL_VERSION = {v1},
}

@inproceedings{mercier2018considering,
  title={Considering the Development Workflow to Achieve Reproducibility with Variation},
  author={Mercier, Michael and Faure, Adrien and Richard, Olivier},
  booktitle={SC 2018-Workshop: ResCuE-HPC},
  pages={1--5},
  year={2018}
}

@inproceedings{software_heritage_2017,
  TITLE = {{Software Heritage: Why and How to Preserve Software Source Code}},
  AUTHOR = {Di Cosmo, Roberto and Zacchiroli, Stefano},
  URL = {https://hal.archives-ouvertes.fr/hal-01590958},
  BOOKTITLE = {{iPRES 2017 - 14th International Conference on Digital Preservation}},
  ADDRESS = {Kyoto, Japan},
  PAGES = {1-10},
  YEAR = {2017},
  MONTH = Sep,
  KEYWORDS = {source code ; digital preservation ; cultural heritage ; open source software ; free software},
  PDF = {https://hal.archives-ouvertes.fr/hal-01590958/file/ipres-2017-software-heritage.pdf},
  HAL_ID = {hal-01590958},
  HAL_VERSION = {v1},
}

@article{nixos_2008,
author = {Dolstra, Eelco and L\"{o}h, Andres},
title = {NixOS: A Purely Functional Linux Distribution},
year = {2008},
issue_date = {September 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {43},
number = {9},
issn = {0362-1340},
url = {https://doi.org/10.1145/1411203.1411255},
doi = {10.1145/1411203.1411255},
abstract = {Existing package and system configuration management tools suffer from an imperative model, where system administration actions such as upgrading packages or changes to system configuration files are stateful: they destructively update the state of the system. This leads to many problems, such as the inability to roll back changes easily, to run multiple versions of a package side-by-side, to reproduce a configuration deterministically on another machine, or to reliably upgrade a system. In this paper we show that we can overcome these problems by moving to a purely functional system configuration model. This means that all static parts of a system (such as software packages, configuration files and system startup scripts) are built by pure functions and are immutable, stored in a way analogously to a heap in a purely function language. We have implemented this model in NixOS, a non-trivial Linux distribution that uses the Nix package manager to build the entire system configuration from a purely functional specification.},
journal = {SIGPLAN Not.},
month = {sep},
pages = {367–378},
numpages = {12},
keywords = {purely functional language, package management, purely functional deployment model, NixOS, nix, system configuration management, software deployment}
}

@incollection{grid5000,
   title = {Adding Virtualization Capabilities to the {Grid'5000} Testbed},
   author = {Balouek, Daniel and Carpen Amarie, Alexandra and Charrier, Ghislain and Desprez, Fr{\'e}d{\'e}ric and Jeannot, Emmanuel and Jeanvoine, Emmanuel and L{\`e}bre, Adrien and Margery, David and Niclausse, Nicolas and Nussbaum, Lucas and Richard, Olivier and P{\'e}rez, Christian and Quesnel, Flavien and Rohr, Cyril and Sarzyniec, Luc},
   booktitle = {Cloud Computing and Services Science},
   publisher = {Springer International Publishing},
   pages = {3-20},
   volume = {367},
   editor = {Ivanov, Ivan I. and van Sinderen, Marten and Leymann, Frank and Shan, Tony },
   series = {Communications in Computer and Information Science },
   isbn = {978-3-319-04518-4 },
   doi = {10.1007/978-3-319-04519-1\_1 },
   year = {2013},
}

    
@misc{nixops,
	title = {{NixOps}},
	copyright = {LGPL-3.0},
	url = {https://github.com/NixOS/nixops},
	abstract = {NixOps is a tool for deploying to NixOS machines in a network or cloud.},
	urldate = {2022-04-28},
	publisher = {Nix/Nixpkgs/NixOS},
	month = apr,
	year = {2022},
	note = {original-date: 2011-10-24T15:49:58Z},
	keywords = {aws, cloud, devops, digialocean, gce, hetzner, libvirt, nix, nixops, nixos, python, virtualbox},
}


@misc{deploy-rs,
	title = {serokell/deploy-rs},
	url = {https://github.com/serokell/deploy-rs},
	abstract = {A simple multi-profile Nix-flake deploy tool.},
	urldate = {2022-04-28},
	publisher = {Serokell},
	month = apr,
	year = {2022},
	note = {original-date: 2020-09-28T17:46:15Z},
	keywords = {deployment, flakes, nix, nix-flake, nixos, tool},
}


@misc{disnixos,
	title = {{DisnixOS}},
	copyright = {LGPL-2.1},
	url = {https://github.com/svanderburg/disnixos},
	abstract = {DisnixOS: A Disnix extension providing complementary infrastructure deployment using NixOS},
	urldate = {2022-04-28},
	author = {Burg, Sander van der},
	month = mar,
	year = {2022},
	note = {original-date: 2013-06-24T14:20:16Z},
}

@misc{disnix,
	title = {Disnix},
	copyright = {LGPL-2.1},
	url = {https://github.com/svanderburg/disnix},
	abstract = {Disnix: A Nix-based distributed service deployment tool},
	urldate = {2022-04-28},
	author = {Burg, Sander van der},
	month = apr,
	year = {2022},
	note = {original-date: 2013-06-24T12:44:47Z},
}


@misc{k3s,
	title = {K3s: {Lightweight} {Kubernetes}},
	url = {https://k3s.io/},
	urldate = {2022-04-28},
	file = {K3s\: Lightweight Kubernetes:/home/quentin/Zotero/storage/67RM5VEI/k3s.io.html:text/html},
}

@inproceedings{georgiou2006tool,
  title={A tool for environment deployment in clusters and light grids},
  author={Georgiou, Yiannis and Leduc, Julien and Videau, Brice and Peyrard, Johann and Richard, Olivier},
  booktitle={Proceedings 20th IEEE International Parallel \& Distributed Processing Symposium},
  pages={8--pp},
  year={2006},
  organization={IEEE}
}

@inproceedings{qemu,
  title={QEMU, a fast and portable dynamic translator.},
  author={Bellard, Fabrice},
  booktitle={USENIX annual technical conference, FREENIX Track},
  volume={41},
  number={46},
  pages={10--5555},
  year={2005},
  organization={Califor-nia, USA}
}


@misc{flent,
	title = {Overview — {Flent}: {The} {FLExible} {Network} {Tester}},
	url = {https://flent.org/},
	urldate = {2022-05-08},
	file = {Overview — Flent\: The FLExible Network Tester:/home/quentin/Zotero/storage/99DSZ67U/flent.org.html:text/html},
}

@inproceedings{yoo2003slurm,
  title={Slurm: Simple linux utility for resource management},
  author={Yoo, Andy B and Jette, Morris A and Grondona, Mark},
  booktitle={Workshop on job scheduling strategies for parallel processing},
  pages={44--60},
  year={2003},
  organization={Springer}
}

    
@misc{vagrant,
	title = {Vagrant by {HashiCorp}},
	url = {https://www.vagrantup.com/},
	abstract = {Vagrant enables users to create and configure lightweight, reproducible, and portable development environments.},
	language = {en},
	urldate = {2022-05-13},
	journal = {Vagrant by HashiCorp},
	file = {Snapshot:/home/quentin/Zotero/storage/Y2SXVEDH/www.vagrantup.com.html:text/html},
}

@inproceedings{execo,
  TITLE = {{Using the EXECO toolbox to perform automatic and reproducible cloud experiments}},
  AUTHOR = {Imbert, Matthieu and Pouilloux, Laurent and Rouzaud-Cornabas, Jonathan and Lebre, Adrien and Hirofuchi, Takahiro},
  URL = {https://hal.inria.fr/hal-00861886},
  BOOKTITLE = {{1st International Workshop on UsiNg and building ClOud Testbeds (UNICO, collocated with IEEE CloudCom 2013}},
  ADDRESS = {Bristol, United Kingdom},
  PUBLISHER = {{IEEE}},
  YEAR = {2013},
  MONTH = Dec,
  DOI = {10.1109/CloudCom.2013.119},
  KEYWORDS = {Virtual machining ; grid computing ; Hardware ; Benchmark testing ; Virtualization ; cloud computing ; Process control ; Bandwidth ; Engines},
  PDF = {https://hal.inria.fr/hal-00861886/file/paper-unico13.pdf},
  HAL_ID = {hal-00861886},
  HAL_VERSION = {v1},
}

@misc{packer,
	title = {Packer by {HashiCorp}},
	url = {https://www.packer.io/},
	abstract = {Packer is a free and open source tool for creating golden images for multiple platforms from a single source configuration.},
	language = {en},
	urldate = {2022-05-13},
	journal = {Packer by HashiCorp},
	file = {Snapshot:/home/quentin/Zotero/storage/C5DTYALF/www.packer.io.html:text/html},
}


@misc{polipo,
	title = {Polipo — a caching web proxy},
	url = {https://www.irif.fr/~jch/software/polipo/},
	urldate = {2022-05-13},
	file = {Polipo — a caching web proxy:/home/quentin/Zotero/storage/PLNVK4RA/polipo.html:text/html},
}


@misc{ansible,
	title = {Ansible is {Simple} {IT} {Automation}},
	url = {https://www.ansible.com},
	abstract = {Ansible is the simplest way to automate apps and IT infrastructure. Application Deployment + Configuration Management + Continuous Delivery.},
	language = {en-us},
	urldate = {2022-05-14},
	author = {Hat, Red, Ansible},
	file = {Snapshot:/home/quentin/Zotero/storage/KPI53I7A/www.ansible.com.html:text/html},
}


@misc{pixz,
	title = {pixz},
	copyright = {BSD-2-Clause},
	url = {https://github.com/vasi/pixz},
	abstract = {Parallel, indexed xz compressor},
	urldate = {2022-05-14},
	author = {Vasilevsky, Dave},
	month = apr,
	year = {2022},
	note = {original-date: 2010-01-13T05:52:38Z},
	keywords = {hacktoberfest},
}


@misc{softwareheritage,
	title = {Software {Heritage}},
	url = {https://www.softwareheritage.org/},
	abstract = {Software [is our] Heritage Software is fragile unlike words carved in stone it can be deleted or get corrupted Software is the key to access information and a fundamental part of human heritage Software Heritage preserves software source code for present and future generations We are building the universal software archive We collect and preserve software in source code […]},
	language = {en-US},
	urldate = {2022-05-17},
	file = {Snapshot:/home/quentin/Zotero/storage/U82X3YGH/www.softwareheritage.org.html:text/html},
}


@misc{docker-compose,
	title = {Overview of {Docker} {Compose}},
	url = {https://docs.docker.com/compose/},
	abstract = {Introduction and Overview of Compose},
	language = {en},
	urldate = {2022-05-17},
	journal = {Docker Documentation},
	month = may,
	year = {2022},
	file = {Snapshot:/home/quentin/Zotero/storage/X86YC6VV/compose.html:text/html},
}

@incollection{chameleon, title={Lessons Learned from the Chameleon Testbed}, author={Kate Keahey and Jason Anderson and Zhuo Zhen and Pierre Riteau and Paul Ruth and Dan Stanzione and Mert Cevik and Jacob Colleran and Haryadi S. Gunawi and Cody Hammock and Joe Mambretti and Alexander Barnes and Fran\c{c}ois Halbach and Alex Rocha and Joe Stubbs}, booktitle={Proceedings of the 2020 USENIX Annual Technical Conference (USENIX ATC '20)}, publisher={USENIX Association}, month={July}, year={2020}}

@inproceedings{cloudlab,
    title     = "The Design and Operation of {CloudLab}",
    author    = "Dmitry Duplyakin and Robert Ricci and Aleksander Maricq and Gary Wong and Jonathon Duerig and Eric Eide and Leigh Stoller and Mike Hibler and David Johnson and Kirk Webb and Aditya Akella and Kuangching Wang and Glenn Ricart and Larry Landweber and Chip Elliott and Michael Zink and Emmanuel Cecchet and Snigdhaswin Kar and Prabodh Mishra",
    booktitle = "Proceedings of the {USENIX} Annual Technical Conference (ATC)",
    pages     = "1--14",
    year      = 2019,
    month     = jul,
    url       = "https://www.flux.utah.edu/paper/duplyakin-atc19"
}

@inproceedings{guilloteau:mfc,
  TITLE = {{Model-free control for resource harvesting in computing grids}},
  AUTHOR = {Guilloteau, Quentin and Robu, Bogdan and Join, C{\'e}dric and Fliess, Michel and Rutten, {\'E}ric and Richard, Olivier},
  URL = {https://hal.archives-ouvertes.fr/hal-03663273},
  BOOKTITLE = {{Conference on Control Technology and Applications, CCTA 2022}},
  ADDRESS = {Trieste, Italy},
  HAL_LOCAL_REFERENCE = {CID},
  PUBLISHER = {{IEEE}},
  YEAR = {2022},
  MONTH = Aug,
  KEYWORDS = {Adaptive Control ; Control for Computing ; Energy Consumption},
  PDF = {https://hal.archives-ouvertes.fr/hal-03663273v2/file/CCTA22.pdf},
  HAL_ID = {hal-03663273},
  HAL_VERSION = {v2},
}

@inproceedings{guilloteau:compas,
  TITLE = {{Collecte de ressources libres dans une grille en pr{\'e}servant le syst{\`e}me de fichiers : une approche autonomique}},
  AUTHOR = {Guilloteau, Quentin and Richard, Olivier and Rutten, Eric and Robu, Bogdan},
  URL = {https://hal.inria.fr/hal-03282727},
  BOOKTITLE = {{COMPAS 2021 - Conf{\'e}rence d'informatique en Parall{\'e}lisme, Architecture et Syst{\`e}me.}},
  ADDRESS = {Lyon, France},
  PAGES = {1-11},
  YEAR = {2021},
  MONTH = Jul,
  KEYWORDS = {Calculs Hautes Performances ; Gestion de ressources ; Syst{\`e}mes auto-adaptatifs ; Informatique Autonomique ; Th{\'e}orie du Contr{\^o}le},
  PDF = {https://hal.inria.fr/hal-03282727/file/COMPAS21_Guilloteau_collecte_ressources_libres_approche_autonomique.pdf},
  HAL_ID = {hal-03282727},
  HAL_VERSION = {v1},
}


@inproceedings{guilloteau:icstcc,
  TITLE = {{Controlling the Injection of Best-Effort Tasks to Harvest Idle Computing Grid Resources}},
  AUTHOR = {Guilloteau, Quentin and Richard, Olivier and Robu, Bogdan and Rutten, Eric},
  URL = {https://hal.inria.fr/hal-03363709},
  BOOKTITLE = {{ICSTCC 2021 - 25th International Conference on System Theory, Control and Computing}},
  ADDRESS = {Iași, Romania},
  PAGES = {1-6},
  YEAR = {2021},
  MONTH = Oct,
  DOI = {10.1109/ICSTCC52150.2021.9607292},
  KEYWORDS = {Dynamic resource management ; High performance computing ; autonomic computing ; instrumentation ; self-adaptive systems},
  PDF = {https://hal.inria.fr/hal-03363709/file/ICSTCC_2021.pdf},
  HAL_ID = {hal-03363709},
  HAL_VERSION = {v1},
}

@inproceedings{stahl2018towards,
  title={Towards a control-theory approach for minimizing unused grid resources},
  author={Stahl, Emmanuel and Yabo, Agustin Gabriel and Richard, Olivier and Bzeznik, Bruno and Robu, Bogdan and Rutten, Eric},
  booktitle={Proceedings of the 1st International Workshop on Autonomous Infrastructure for Science},
  pages={1--8},
  year={2018}
}

@inproceedings{yabo2019control,
  title={A control-theory approach for cluster autonomic management: maximizing usage while avoiding overload},
  author={Yabo, Agustin Gabriel and Robu, Bogdan and Richard, Olivier and Bzeznik, Bruno and Rutten, Eric},
  booktitle={2019 IEEE Conference on Control Technology and Applications (CCTA)},
  pages={189--195},
  year={2019},
  organization={IEEE}
}


@article{boito2018checkpoint,
  title={A checkpoint of research on parallel i/o for high-performance computing},
  author={Boito, Francieli Zanon and Inacio, Eduardo C and Bez, Jean Luca and Navaux, Philippe OA and Dantas, Mario AR and Denneulin, Yves},
  journal={ACM Computing Surveys (CSUR)},
  volume={51},
  number={2},
  pages={1--35},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@INPROCEEDINGS{nxc,
  author={Guilloteau, Quentin and Bleuzen, Jonathan and Poquet, Millian and Richard, Olivier},
  booktitle={2022 IEEE International Conference on Cluster Computing (CLUSTER)}, 
  title={Painless Transposition of Reproducible Distributed Environments with NixOS Compose}, 
  year={2022},
  volume={},
  number={},
  pages={1-12},
  doi={10.1109/CLUSTER51413.2022.00051}}

@inproceedings{guilloteau:nxc,
  title = {{Painless Transposition of Reproducible Distributed Environments with NixOS Compose}},
  author = {Guilloteau, Quentin and Bleuzen, Jonathan and Poquet, Millian and Richard, Olivier},
  url = {https://hal.science/hal-03723771},
  booktitle = {{CLUSTER 2022 - IEEE International Conference on Cluster Computing}},
  address = {Heidelberg, Germany},
  volume = {CLUSTER 2022 - IEEE International Conference on Cluster Computing},
  pages = {1-12},
  year = {2022},
  month = Sep,
  keywords = {Reproducibility ; Distributed Systems ; System Image ; Deployment ; Nix},
  pdf = {https://hal.science/hal-03723771v2/file/painless_transposition_repro_distributed_env_with_nxc_camera_ready_fixed.pdf},
  hal_id = {hal-03723771},
  hal_version = {v2},
}

@inproceedings{pawlowski2000nfs,
  title={The NFS version 4 protocol},
  author={Pawlowski, Brian and Noveck, David and Robinson, David and Thurlow, Robert},
  booktitle={In Proceedings of the 2nd International System Administration and Networking Conference (SANE 2000},
  year={2000},
  organization={Citeseer}
}

@inproceedings{bonnie2011orangefs,
  title={OrangeFS: Advancing PVFS},
  author={Bonnie, Michael Moore David and Ligon, Becky and Marshall, Mike and Ligon, Walt and Mills, Nicholas and Sampson, Elaine Quarles Sam and Yang, Shuangyang and Wilson, Boyd},
  booktitle={USENIX Conference on File and Storage Technologies (FAST)},
  year={2011}
}

@inproceedings{cigri,
  title={Evaluations of the lightweight grid cigri upon the grid5000 platform},
  author={Georgiou, Yiannis and Richard, Olivier and Capit, Nicolas},
  booktitle={Third IEEE International Conference on e-Science and Grid Computing (e-Science 2007)},
  pages={279--286},
  year={2007},
  organization={IEEE}
}

@inproceedings{guilloteau:cigri_jobs,
  TITLE = {{{\'E}tude des applications Bag-of-Tasks du m{\'e}so-centre Gricad}},
  AUTHOR = {Guilloteau, Quentin and Richard, Olivier and Rutten, {\'E}ric},
  URL = {https://hal.archives-ouvertes.fr/hal-03702246},
  BOOKTITLE = {{COMPAS 2022 - Conf{\'e}rence francophone d'informatique en Parall{\'e}lisme, Architecture et Syst{\`e}me}},
  ADDRESS = {Amiens, France},
  PAGES = {1-7},
  YEAR = {2022},
  MONTH = Jul,
  KEYWORDS = {Calculs Hautes Performances ; Grille de Calculs ; Applications Bag-of-Tasks},
  PDF = {https://hal.archives-ouvertes.fr/hal-03702246/file/compas22_etude_bot_applications_gricad.pdf},
  HAL_ID = {hal-03702246},
  HAL_VERSION = {v1},
}

@article{darshan1,
  title={Understanding and improving computational science storage access through continuous characterization},
  author={Carns, Philip and Harms, Kevin and Allcock, William and Bacon, Charles and Lang, Samuel and Latham, Robert and Ross, Robert},
  journal={ACM Transactions on Storage (TOS)},
  volume={7},
  number={3},
  pages={1--26},
  year={2011},
  publisher={ACM New York, NY, USA}
}

@inproceedings{darshan2,
  title={24/7 characterization of petascale I/O workloads},
  author={Carns, Philip and Latham, Robert and Ross, Robert and Iskra, Kamil and Lang, Samuel and Riley, Katherine},
  booktitle={2009 IEEE International Conference on Cluster Computing and Workshops},
  pages={1--10},
  year={2009},
  organization={IEEE}
}

@article{muggeo2003estimating,
  title={Estimating regression models with unknown break-points},
  author={Muggeo, Vito MR},
  journal={Statistics in medicine},
  volume={22},
  number={19},
  pages={3055--3071},
  year={2003},
  publisher={Wiley Online Library}
}

@inproceedings{rosendo2020e2clab,
  TITLE = {{E2Clab: Exploring the Computing Continuum through Repeatable, Replicable and Reproducible Edge-to-Cloud Experiments}},
  AUTHOR = {Rosendo, Daniel and Silva, Pedro and Simonin, Matthieu and Costan, Alexandru and Antoniu, Gabriel},
  URL = {https://hal.science/hal-02916032},
  BOOKTITLE = {{Cluster 2020 - IEEE International Conference on Cluster Computing}},
  ADDRESS = {Kobe, Japan},
  PAGES = {1-11},
  YEAR = {2020},
  MONTH = Sep,
  DOI = {10.1109/CLUSTER49012.2020.00028},
  KEYWORDS = {Reproducibility ; Methodology ; Computing Continuum ; Edge Intelligence},
  PDF = {https://hal.science/hal-02916032/file/Cluster_2020_E2Clab_HAL_v1.pdf},
  HAL_ID = {hal-02916032},
  HAL_VERSION = {v1},
}

@inproceedings{keahey2020lessons,
  title={Lessons learned from the chameleon testbed},
  author={Keahey, Kate and Anderson, Jason and Zhen, Zhuo and Riteau, Pierre and Ruth, Paul and Stanzione, Dan and Cevik, Mert and Colleran, Jacob and Gunawi, Haryadi S and Hammock, Cody and others},
  booktitle={2020 USENIX annual technical conference (USENIX ATC 20)},
  pages={219--233},
  year={2020}
}

@article{kadeploy,
  title={Kadeploy3: Efficient and scalable operating system provisioning for clusters},
  author={Jeanvoine, Emmanuel and Sarzyniec, Luc and Nussbaum, Lucas},
  journal={USENIX Association},
  volume={38},
  number={1},
  pages={38--44},
  year={2013}
}



@misc{ior,
  author = {foo},
  title = {IOR Benchmark},
  howpublished = {\url{https://github.com/hpc/ior}},
  note = {Accessed: 2023-01-19}
}
@misc{io500,
  author = {foo},
  title = {IO500 List},
  howpublished = {\url{https://io500.org/}},
  note = {Accessed: 2023-01-19}
}

@misc{zenodo,
  author = {zenodo},
  title = {Zenodo},
  howpublished = {\url{https://zenodo.org/}},
  note = {Accessed: 2023-03-30}
}

@misc{swheritage,
  author = {Software Heritage},
  title = {Software Heritage},
  howpublished = {\url{https://www.softwareheritage.org/}},
  note = {Accessed: 2023-03-30}
}

@misc{tgz-g5k,
  author = {Grid'5000},
  title = {Creating an environment images using tgz-g5k},
  howpublished = {\url{https://grid5000.fr/w/Environment_creation\#Creating_an_environment_images_using_tgz-g5k}},
  note = {Accessed: 2023-04-03}
}

@misc{cc-snapshot,
  author = {Chameleon Cloud},
  title = {The cc-snapshot utility},
  howpublished = {\url{https://chameleoncloud.readthedocs.io/en/latest/technical/images.html\#the-cc-snapshot-utility}},
  note = {Accessed: 2023-04-03}
}

@book{randallIrreproducibilityCrisisModern2018,
	address = {New York},
	title = {The {Irreproducibility} {Crisis} of {Modern} {Science}. {Causes}, {Consequences}, and the {Road} to {Reform}},
	url = {https://www.nas.org/reports/the-irreproducibility-crisis-of-modern-science},
	language = {en},
	publisher = {National Association of Scholars},
	author = {Randall, David and Welser, Christopher},
	year = {2018},
	keywords = {lu},
	file = {NAS_irreproducibilityReport.pdf:C\:\\Users\\sgranger\\Zotero\\storage\\BX5BVUIS\\NAS_irreproducibilityReport.pdf:application/pdf}
}

@article{baker500ScientistsLift2016,
	title = {1,500 scientists lift the lid on reproducibility},
	volume = {533},
	issn = {0028-0836, 1476-4687},
	url = {http://www.nature.com/doifinder/10.1038/533452a},
	doi = {10.1038/533452a},
	number = {7604},
	urldate = {2019-05-03},
	journal = {Nature},
	author = {Baker, Monya},
	month = may,
	year = {2016},
	pages = {452--454}
}

@misc{flakes,
	author = {Tweag.io},
	title = {What problems do flakes solve?},
	howpublished = {\url{https://www.tweag.io/blog/2020-05-25-flakes/}},
	note = {Accessed: 2023-04-04}
}

@article{mytkowicz2009producing,
  title={Producing wrong data without doing anything obviously wrong!},
  author={Mytkowicz, Todd and Diwan, Amer and Hauswirth, Matthias and Sweeney, Peter F},
  journal={ACM Sigplan Notices},
  volume={44},
  number={3},
  pages={265--276},
  year={2009},
  publisher={ACM New York, NY, USA}
}

@misc{kapack,
	author = {OAR-Team},
	title = {NUR-Kapack},
	howpublished = {\url{https://github.com/oar-team/nur-kapack}},
	note = {Accessed: 2023-04-04}
}

@misc{guix-hpc,
	author = {Guix-HPC},
	title = {Guix-HPC},
	howpublished = {\url{https://gitlab.inria.fr/guix-hpc/guix-hpc}},
	note = {Accessed: 2023-04-04}
}

@article{brammer2011paper,
  title={Paper m{\^a}ch{\'e}: Creating dynamic reproducible science},
  author={Brammer, Grant R and Crosby, Ralph W and Matthews, Suzanne J and Williams, Tiffani L},
  journal={Procedia Computer Science},
  volume={4},
  pages={658--667},
  year={2011},
  publisher={Elsevier}
}

@article{brinckman2019computing,
  title={Computing environments for reproducibility: Capturing the “Whole Tale”},
  author={Brinckman, Adam and Chard, Kyle and Gaffney, Niall and Hategan, Mihael and Jones, Matthew B and Kowalik, Kacper and Kulasekaran, Sivakumar and Lud{\"a}scher, Bertram and Mecum, Bryce D and Nabrzyski, Jarek and others},
  journal={Future Generation Computer Systems},
  volume={94},
  pages={854--867},
  year={2019},
  publisher={Elsevier}
}

@article{ivie2018reproducibility,
  title={Reproducibility in scientific computing},
  author={Ivie, Peter and Thain, Douglas},
  journal={ACM Computing Surveys (CSUR)},
  volume={51},
  number={3},
  pages={1--36},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@misc{acm-badges,
	author = {ACM},
	title = {Artefact review badging},
	howpublished = {\url{https://www.acm.org/publications/policies/artifact-review-badging}},
	note = {Accessed: 2023-04-04}
}

@misc{nixpkgs,
	author = {NixOS},
	title = {nixpkgs},
	howpublished = {\url{https://github.com/nixos/nixpkgs}},
	note = {Accessed: 2023-04-04}
}

@inproceedings{stodden2018assessing,
  title={Assessing reproducibility: An astrophysical example of computational uncertainty in the HPC context},
  author={Stodden, Victoria and Krafczyk, Matthew S},
  booktitle={Proceedings of the 1st Workshop on Reproducible, Customizable and Portable Workflows for HPC at SC},
  volume={18},
  year={2018}
}

@misc{blinry,
	author = {blinry},
	title = {Building 15-year-old software with Nix},
	howpublished = {\url{https://blinry.org/nix-time-travel/}},
	note = {Accessed: 2023-04-16}
}
